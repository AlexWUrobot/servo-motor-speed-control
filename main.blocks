<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="I6^}3,M$z|~XdmCmRqHm">angle</variable><variable id="u58t3`#@;bQwJ7kOPlai">max_angle</variable><variable id="TYpIt-$az]dartHy%BKB">min_angle</variable></variables><comment id="ObRUTK{0ZXAZm;q{1:ku" data="0" x="0" y="0" h="120" w="270">basic.forever(function () {</comment><comment id="i1YQ_x,esTY]qrlg370P" data="1" x="0" y="0" h="120" w="460">shoulder_pos = input.acceleration(Dimension.X)</comment><comment id="2jFcgxRYOQUtB`vU=/dZ" data="2" x="0" y="0" h="120" w="360">if (Math.abs(shoulder_pos) &gt;= 100) {</comment><comment id="WRx6k?Vj%a^*}SzIYxb]" data="3" x="0" y="0" h="120" w="240">if (shoulder_pos &lt;= 0) {</comment><comment id="FLSd|JItY9El/f.fg*W/" data="4" x="0" y="0" h="120" w="170">angle = angle - 3</comment><comment id="?m.e^eIfGM(-K0S|8u[L" data="5" x="0" y="0" h="120" w="160">} else {</comment><comment id=")FH.u64;l8@nQP8OV.oe" data="6" x="0" y="0" h="120" w="170">angle = angle + 3</comment><comment id="kWk=-#ws3_A%(IIkLtls" data="7" x="0" y="0" h="120" w="160">}</comment><comment id="?oi/oRBjawe,-s5J^33f" data="8" x="0" y="0" h="120" w="250">if (angle &lt;= min_angle) {</comment><comment id="#b2T+O,PF-bOR^K~#cR~" data="9" x="0" y="0" h="120" w="170">angle = min_angle</comment><comment id="yb$4:66kJ%@5B^~E!=#J" data="10" x="0" y="0" h="120" w="160">}</comment><comment id="|Zt(gs2NMw#ZIhGGdFVy" data="11" x="0" y="0" h="120" w="250">if (angle &gt;= max_angle) {</comment><comment id="0oAPuGW0JD%ZF-^!zCGw" data="12" x="0" y="0" h="120" w="170">angle = max_angle</comment><comment id="Tu~!{vb|x~!c@i7K+2Bu" data="13" x="0" y="0" h="120" w="160">}</comment><comment id="Bg=NjP+=D%eyp`cGnDJW" data="14" x="0" y="0" h="120" w="250">servos.P0.setAngle(angle)</comment><comment id="ndd_{ucwSIYOCq?X0wOF" data="15" x="0" y="0" h="120" w="160">}</comment><comment id="}R#fe4XY{{;e$}L-`bs@" data="16" x="0" y="0" h="120" w="160">basic.pause(2)</comment><comment id=".ZDl3Q?wg$I:swv?qFWY" data="17" x="0" y="0" h="120" w="160">})</comment><block type="pxt-on-start" id="rV({EQkSZiEgK10TYh~n" x="10" y="10"><statement name="HANDLER"><block type="variables_set" id="W$dT)~(b(;mO64QnH8Le"><field name="VAR" id="I6^}3,M$z|~XdmCmRqHm">angle</field><value name="VALUE"><shadow type="math_number" id="vg08dI_W;rQ[iZ#Y^Cj~"><field name="NUM">60</field></shadow></value><next><block type="variables_set" id="laBn3tq*V]bfx,:?sR0v"><field name="VAR" id="u58t3`#@;bQwJ7kOPlai">max_angle</field><value name="VALUE"><shadow type="math_number" id=".2/ifJ1G.xtBa]O-^4D#"><field name="NUM">160</field></shadow></value><next><block type="variables_set" id="uh,h/.zj-lVxsoX$jD7B"><field name="VAR" id="TYpIt-$az]dartHy%BKB">min_angle</field><value name="VALUE"><shadow type="math_number" id="02yu!BMg^]4fxjo~f%tR"><field name="NUM">20</field></shadow></value><next><block type="typescript_statement" id="5s2=`v[Vwk#r5^tM`f}U" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace SetServoSpeed{" line1="    /**" line2="     * Address motor rotation direction and speed by acceleration" line3="     */" line4="    //% blockId = servoturnspeed" line5="    //% block = &quot;set servo rotate in the direction $direction by $speed (ms) interval&quot;" line6="    export function SetTurnSpeed(direction: number, speed: number): void{" line7="        if (Math.abs(direction) &gt;= 100) {" line8="            if (direction &lt;= 0) {" line9="                angle = angle - 3" line10="            } else {" line11="                angle = angle + 3" line12="            }" line13="            if (angle &lt;= min_angle) {" line14="                angle = min_angle" line15="            }" line16="            if (angle &gt;= max_angle) {" line17="                angle = max_angle" line18="            }" line19="            servos.P0.setAngle(angle)" line20="        }" line21="        basic.pause(speed)" line22="    }" line23="}" numlines="24"></mutation></block></next></block></next></block></next></block></statement></block></xml>